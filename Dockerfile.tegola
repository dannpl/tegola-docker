# Based on the Dockerfile in the Tegola source tree
# --- Build the binary
FROM golang:alpine AS build
RUN apk update
RUN apk add git
RUN apk add musl-dev
RUN apk add gcc
RUN apk add nodejs
RUN apk add npm

# Set up source for compilation
RUN mkdir /workspace && cd /workspace && git clone https://github.com/go-spatial/tegola
RUN mv /workspace/tegola /workspace/tegola_src
RUN rm -rf /workspace/tegola_src/src
RUN mkdir -p /workspace/tegola_src/src/github.com/go-spatial
RUN ln -s /workspace/tegola_src /workspace/tegola_src/src/github.com/go-spatial/tegola

# Build binary
WORKDIR /workspace/tegola_src/cmd/tegola
RUN cd /workspace/tegola_src/ui && npm install
RUN go build -v -gcflags "-N -l" -o /workspace/tegola
RUN chmod a+x /workspace/tegola

# --- Create minimal deployment image, just alpine & the binary
FROM alpine:3.7
LABEL io.gospatial.version="0.6.0_beta"
COPY --from=build /workspace/tegola /workspace/
RUN mkdir -p /workspace/tegola_config/
COPY config.toml /workspace/tegola_config/
EXPOSE 8080
CMD ["/workspace/tegola", "--config", "/workspace/tegola_config/config.toml", "serve"]
